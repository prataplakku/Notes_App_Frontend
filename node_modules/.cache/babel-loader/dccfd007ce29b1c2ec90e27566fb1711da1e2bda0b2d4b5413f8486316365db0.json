{"ast":null,"code":"var _jsxFileName = \"D:\\\\notes_app\\\\frontend\\\\src\\\\Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Helper function to format the timestamp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTimestamp = timestamp => {\n  const date = new Date(timestamp);\n  return date.toLocaleString(); // Adjust this line to format the date as needed\n};\nfunction Notes({\n  notes,\n  setNotes,\n  username\n}) {\n  _s();\n  const [newNote, setNewNote] = useState('');\n  const addNote = async () => {\n    const response = await fetch('http://localhost:8000/api/add_note/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        note: newNote\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setNotes(prevNotes => [...prevNotes, data.note]); // Update the notes state with the newly added note\n      alert(data.message || 'Note added successfully');\n      setNewNote(''); // Clear the input field after adding the note\n    } else {\n      alert(data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello \", username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.content, \" (Created at: \", formatTimestamp(note.timestamp), \")\"]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New note\",\n      value: newNote,\n      onChange: e => setNewNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Notes, \"lRmJ3W/mkguH9OYB3c+BBVzs83Q=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","formatTimestamp","timestamp","date","Date","toLocaleString","Notes","notes","setNotes","username","_s","newNote","setNewNote","addNote","response","fetch","method","headers","body","JSON","stringify","note","data","json","ok","prevNotes","alert","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/notes_app/frontend/src/Notes.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Helper function to format the timestamp\r\nconst formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleString();  // Adjust this line to format the date as needed\r\n};\r\n\r\nfunction Notes({ notes, setNotes, username }) {\r\n    const [newNote, setNewNote] = useState('');\r\n\r\n    const addNote = async () => {\r\n        const response = await fetch('http://localhost:8000/api/add_note/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username, note: newNote })\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            setNotes(prevNotes => [...prevNotes, data.note]);  // Update the notes state with the newly added note\r\n            alert(data.message || 'Note added successfully');\r\n            setNewNote(''); // Clear the input field after adding the note\r\n        } else {\r\n            alert(data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Hello {username} </h2>\r\n            <ul>\r\n                {notes.map(note => (\r\n                    <li key={note.id}>\r\n                        {note.content} (Created at: {formatTimestamp(note.timestamp)})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"New note\" \r\n                value={newNote}\r\n                onChange={e => setNewNote(e.target.value)} \r\n            />\r\n            <button onClick={addNote}>Add Note</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAIC,SAAS,IAAK;EACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC,CAAC,CAAE;AACnC,CAAC;AAED,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,QAAQ;QAAEY,IAAI,EAAEV;MAAQ,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACbhB,QAAQ,CAACiB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEH,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAAE;MACnDK,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,yBAAyB,CAAC;MAChDf,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACHc,KAAK,CAACJ,IAAI,CAACM,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACI5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,GAAI,QAAM,EAACpB,QAAQ,EAAC,GAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA;MAAA6B,QAAA,EACKtB,KAAK,CAAC2B,GAAG,CAACb,IAAI,iBACXrB,OAAA;QAAA6B,QAAA,GACKR,IAAI,CAACc,OAAO,EAAC,gBAAc,EAAClC,eAAe,CAACoB,IAAI,CAACnB,SAAS,CAAC,EAAC,GACjE;MAAA,GAFSmB,IAAI,CAACe,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLjC,OAAA;MACIqC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE5B,OAAQ;MACf6B,QAAQ,EAAEC,CAAC,IAAI7B,UAAU,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFjC,OAAA;MAAQ2C,OAAO,EAAE9B,OAAQ;MAAAgB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACvB,EAAA,CAvCQJ,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAyCd,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}