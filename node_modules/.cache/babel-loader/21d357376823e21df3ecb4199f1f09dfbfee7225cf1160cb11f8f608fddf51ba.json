{"ast":null,"code":"var _jsxFileName = \"D:\\\\notes_app\\\\frontend\\\\src\\\\Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes({\n  notes,\n  username\n}) {\n  _s();\n  const [newNote, setNewNote] = useState('');\n  const addNote = async () => {\n    const response = await fetch('http://localhost:8000/api/add_note/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        note: newNote\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(data.message || 'Note added successfully');\n    } else {\n      alert(data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.content, \" (Created at: \", note.timestamp, \")\"]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New note\",\n      onChange: e => setNewNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Notes, \"lRmJ3W/mkguH9OYB3c+BBVzs83Q=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Notes","notes","username","_s","newNote","setNewNote","addNote","response","fetch","method","headers","body","JSON","stringify","note","data","json","ok","alert","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content","timestamp","id","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["D:/notes_app/frontend/src/Notes.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Notes({ notes, username }) {\r\n    const [newNote, setNewNote] = useState('');\r\n\r\n    const addNote = async () => {\r\n        const response = await fetch('http://localhost:8000/api/add_note/', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username, note: newNote })\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            alert(data.message || 'Note added successfully');\r\n        } else {\r\n            alert(data.error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Notes</h2>\r\n            <ul>\r\n                {notes.map(note => (\r\n                    <li key={note.id}>{note.content} (Created at: {note.timestamp})</li>\r\n                ))}\r\n            </ul>\r\n            <input type=\"text\" placeholder=\"New note\" onChange={e => setNewNote(e.target.value)} />\r\n            <button onClick={addNote}>Add Note</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,QAAQ;QAAEY,IAAI,EAAEV;MAAQ,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACbC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,yBAAyB,CAAC;IACpD,CAAC,MAAM;MACHD,KAAK,CAACH,IAAI,CAACK,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA;MAAAsB,QAAA,EACKpB,KAAK,CAACyB,GAAG,CAACZ,IAAI,iBACXf,OAAA;QAAAsB,QAAA,GAAmBP,IAAI,CAACa,OAAO,EAAC,gBAAc,EAACb,IAAI,CAACc,SAAS,EAAC,GAAC;MAAA,GAAtDd,IAAI,CAACe,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmD,CACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACL1B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEC,CAAC,IAAI5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvF1B,OAAA;MAAQqC,OAAO,EAAE9B,OAAQ;MAAAe,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACtB,EAAA,CA9BQH,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}